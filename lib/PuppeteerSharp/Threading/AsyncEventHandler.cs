using System;
using System.Threading.Tasks;

namespace PuppeteerSharp.Threading
{
    /// <summary>
    /// Represents the method that will handle an asynchronous event that has no event data.
    /// </summary>
    /// <param name="sender">The source of the event.</param>
    /// <param name="args">An object that contains no event data.</param>
    /// <returns>A task representing the asynchronous operation.</returns>
    public delegate Task AsyncEventHandler(object sender, EventArgs args);

    /// <summary>
    /// Represents the method that will handle an asynchronous event when the event provides data.
    /// </summary>
    /// <typeparam name="TEventArgs">The type of the event data generated by the event.</typeparam>
    /// <param name="sender">The source of the event.</param>
    /// <param name="args">An object that contains the event data.</param>
    /// <returns>A task representing the asynchronous operation.</returns>
    public delegate Task AsyncEventHandler<TEventArgs>(object sender, TEventArgs args);
}
